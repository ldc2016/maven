<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <context:component-scan base-package="com.vip.common.repository" />
    <context:component-scan base-package="com.vip.common.service" />
    <context:annotation-config />

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.vip.common.**.repository" />
        <property name="sqlSessionFactoryBeanName" value="myBatisSqlSessionFactory" />
        <property name="annotationClass" value="org.springframework.stereotype.Repository" />
    </bean>

    <bean id="myBatisSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource1" />
        <property name="mapperLocations" value="classpath*:com/vip/common/mapper/*.xml" />
    </bean>

    <bean id="dataSource1" class="${dataSource}"> <!-- 这些配置Spring在启动时会去conn.properties中找 -->
        <property name="driverClass" value="${driverClass}" />
        <property name="jdbcUrl" value="${jdbcUrl}" />
        <property name="user" value="${user}" />
        <property name="password" value="${password}" />
    </bean>


    <!--redis pool config start-->
    <bean id="abstractRedisCacheManager" class="com.vip.redis.cluster.impl.RedisApiByJedisClientManagerImpl"  abstract="true">
        <property name="maxActive">
            <value>${redis.maxActive}</value>
        </property>
        <property name="maxIdle">
            <value>${redis.maxIdle}</value>
        </property>
        <property name="maxWait">
            <value>${redis.maxWait}</value>
        </property>
        <property name="testOnBorrow">
            <value>${redis.testOnBorrow}</value>
        </property>
        <property name="timeOut">
            <value>${redis.timeOut}</value>
        </property>
    </bean>

    <bean id="redisCacheManager00" class="com.vip.redis.cluster.impl.RedisApiByJedisClientManagerImpl"  init-method="init" parent="abstractRedisCacheManager">
        <property name="redisHost">
            <value>${redis.cache00.host.name}</value>
        </property>
        <property name="redisPort">
            <value>${redis.cache00.host.port}</value>
        </property>
    </bean>

    <bean id="redisCacheManager01" class="com.vip.redis.cluster.impl.RedisApiByJedisClientManagerImpl"  init-method="init" parent="abstractRedisCacheManager">
        <property name="redisHost">
            <value>${redis.cache01.host.name}</value>
        </property>
        <property name="redisPort">
            <value>${redis.cache01.host.port}</value>
        </property>
    </bean>

    <bean id="redisCacheManager02" class="com.vip.redis.cluster.impl.RedisApiByJedisClientManagerImpl"  init-method="init" parent="abstractRedisCacheManager">
        <property name="redisHost">
            <value>${redis.cache02.host.name}</value>
        </property>
        <property name="redisPort">
            <value>${redis.cache02.host.port}</value>
        </property>
    </bean>

    <bean id="redisCacheManager" class="com.vip.redis.cluster.impl.RedisCacheServiceImpl">
        <property name="redisCacheMap">
            <map>
                <entry key="0" value-ref="redisCacheManager00" />
                <entry key="1" value-ref="redisCacheManager01" />
                <entry key="2" value-ref="redisCacheManager02" />
            </map>
        </property>
    </bean>
    <!--redis pool config end-->


    <!-- 开发环境配置文件 -->
    <beans profile="development">
        <context:property-placeholder location="classpath*:spring/properties/development.properties"/>
    </beans>

    <!-- 测试环境配置文件 -->
    <beans profile="test">
        <context:property-placeholder location="classpath*:spring/properties/test.properties"/>
    </beans>


</beans>